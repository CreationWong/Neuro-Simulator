name: Release

on:
  workflow_dispatch:
  push:
    tags:
      - 'server-v*.*.*'
      - 'client-v*.*.*'

jobs:
  release-server:
    name: Release Server to PyPI
    if: startsWith(github.ref, 'refs/tags/server-v')
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5.0.0

      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF_NAME#server-v}" >> $GITHUB_OUTPUT

      - name: Set up Python
        uses: actions/setup-python@v5.6.0
        with:
          python-version: '3.12'

      - name: Install build dependencies
        run: python -m pip install --upgrade pip build

      - name: Build package
        run: python -m build
        working-directory: ./server

      - name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@v1.12.4
        with:
          packages-dir: server/dist/

      - name: Create GitHub Release
        uses: actions/create-release@v1.1.4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: "Server v${{ steps.get_version.outputs.VERSION }}"
          generate_release_notes: true

  release-client:
    name: Release Client
    if: startsWith(github.ref, 'refs/tags/client-v')
    strategy:
      matrix:
        platform: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.platform }}
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5.0.0

      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF_NAME#client-v}" >> $GITHUB_OUTPUT

      - name: Setup Node.js
        uses: actions/setup-node@v4.4.0
        with:
          node-version: '24'

      - name: Install frontend dependencies
        run: npm install
        working-directory: ./client

      - name: Build static web app
        if: matrix.platform == 'ubuntu-latest'
        run: npm run build
        working-directory: ./client

      - name: Archive static web app
        if: matrix.platform == 'ubuntu-latest'
        run: |
          cd client
          zip -r ../web.zip ./dist
          cd ..
        shell: bash

      - name: Install Tauri dependencies (Ubuntu)
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev build-essential curl wget file libxdo-dev libssl-dev libayatana-appindicator3-dev librsvg2-dev

      - name: Build Tauri App
        uses: tauri-apps/tauri-action@v0
        id: tauri
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          projectPath: ./client

      - name: Update GitHub Release
        if: matrix.platform == 'ubuntu-latest'
        uses: softprops/action-gh-release@v2.3.2
        with:
          tag_name: ${{ github.ref_name }}
          name: "Client v${{ steps.get_version.outputs.VERSION }}"
          generate_release_notes: true
          files: |
            ./web.zip
            client/src-tauri/target/release/bundle/msi/*.msi
            client/src-tauri/target/release/bundle/appimage/*.AppImage
            client/src-tauri/target/release/bundle/deb/*.deb
          body: "The static web app for self-hosting is in `web.zip`."
